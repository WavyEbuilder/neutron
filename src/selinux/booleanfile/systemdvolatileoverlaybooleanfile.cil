;; neutron - Next-generation system SELinux policy
;; Copyright (C) 2025 Rahul Sandhu <nvraxn@gmail.com>
;;
;; This program is free software: you can redistribute it and/or modify
;; it under the terms of the GNU General Public License, as published by
;; the Free Software Foundation, either version 3 of the License, or (at your
;; option) any later version.
;;
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see <https://www.gnu.org/licenses/>.

;; systemd-volatile-overlay supports booting the system in a stateless mode
;; where / is not xattr.fs but tmp.fs. This requires systemd in the initrd,
;; which ensures that the / of the volatile overlay is properly labeled:

;; mkdir -p /usr/lib/dracut/modules.d/98relabel
;;
;; cat > /usr/lib/dracut/modules.d/98relabel/module-setup.sh <<'EOF'
;; #!/bin/bash
;;
;; check() {
;;     return 0
;; }
;;
;; depends() {
;;     return 0
;; }
;;
;; install() {
;;     inst_hook pre-pivot 50 "$moddir/selinux-relabel.sh"
;; }
;; EOF
;;
;; cat > /usr/lib/dracut/modules.d/98relabel/selinux-relabel.sh <<'EOF'
;; #!/bin/sh
;;
;; getarg "systemd.volatile=overlay" > /dev/null || exit 0
;;
;; mkdir -p /run/systemd/system-generators
;; cat > /run/systemd/system-generators/overlayroot.sh <<'FOO'
;; #!/bin/sh
;; echo 't / - - - - security.selinux="sys.id:sys.role:root.file:s0"' | systemd-tmpfiles --create -
;; FOO
;; chmod +x /run/systemd/system-generators/overlayroot.sh
;; EOF
;;
;; chmod +x /usr/lib/dracut/modules.d/98relabel/module-setup.sh
;; chmod +x /usr/lib/dracut/modules.d/98relabel/selinux-relabel.sh

(boolean systemd_volatile_overlay false)

(booleanif systemd_volatile_overlay
           (true

            (call tmp.associate_fs (xattr.associate_fs_pattern.typeattr))
            (call tmp.getattr_fs (xattr.getattr_fs_pattern.typeattr))))

(block systemd_volatile_overlay

  (genfscon "selinuxfs" "/booleans/systemd_volatile_overlay"
            booleanfile_context)

  (blockinherit .booleanfile.template))
